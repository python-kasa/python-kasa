trigger:
- master
pr:
- master

strategy:
  matrix:
    Python 3.7 Ubuntu:
      python.version: '3.7'
      vmImage: 'ubuntu-latest'
#    PyPy Ubuntu:
#      python.version: pypy3
#      vmImage: 'ubuntu-latest'
    Python 3.7 Windows:
      python.version: '3.7'
      vmImage: 'windows-latest'
    Python 3.7 OSX:
      python.version: '3.7'
      vmImage: 'macOS-latest'

pool:
      vmImage: $(vmImage)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r requirements_test.txt
  displayName: 'Install dependencies'

- script: |
    pre-commit run black --all-files
  displayName: 'Code formating (black)'

- script: |
    pre-commit run flake8 --all-files
  displayName: 'Code formating (flake8)'

- script: |
    pre-commit run mypy --all-files
  displayName: 'Typing checks (mypy)'

- script: |
    pre-commit run isort --all-files
  displayName: 'Order of imports (isort)'

- script: |
    pre-commit run trailing-whitespace --all-files
  displayName: 'Run trailing-whitespace'

- script: |
    pre-commit run end-of-file-fixer --all-files
  displayName: 'Run end-of-file-fixer'

- script: |
    pre-commit run check-docstring-first --all-files
  displayName: 'Run check-docstring-first'

- script: |
    pre-commit run check-yaml --all-files
  displayName: 'Run check-yaml'

- script: |
    pre-commit run debug-statements --all-files
  displayName: 'Run debug-statements'

- script: |
    pre-commit run check-ast --all-files
  displayName: 'Run check-ast'

- script: |
    pre-commit run isort --all-files
  displayName: 'Order of imports (isort)'

- script: |
    pytest --cov kasa --cov-report html
  displayName: 'Tests'
