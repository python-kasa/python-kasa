"""Module for io device timezone lookups."""

from __future__ import annotations

from datetime import timedelta, timezone

TZINDEX = {
    0: (timedelta(hours=-12), "(UTC-12:00) International Date Line West"),
    1: (timedelta(hours=-11), "(UTC-11:00) Coordinated Universal Time-11"),
    2: (timedelta(hours=-10), "(UTC-10:00) Hawaii"),
    3: (timedelta(hours=-9), "(UTC-09:00) Alaska"),
    4: (timedelta(hours=-8), "(UTC-08:00) Baja California"),
    5: (timedelta(hours=-8), "(UTC-08:00) Pacific Standard Time (US & Canada)"),
    6: (timedelta(hours=-8), "(UTC-08:00) Pacific Daylight Time (US & Canada)"),
    7: (timedelta(hours=-7), "(UTC-07:00) Arizona"),
    8: (timedelta(hours=-7), "(UTC-07:00) Chihuahua, La Paz, Mazatlan"),
    9: (timedelta(hours=-7), "(UTC-07:00) Mountain Standard Time (US & Canada)"),
    10: (timedelta(hours=-7), "(UTC-07:00) Mountain Daylight Time (US & Canada)"),
    11: (timedelta(hours=-6), "(UTC-06:00) Central America"),
    12: (timedelta(hours=-6), "(UTC-06:00) Central Standard Time (US & Canada)"),
    13: (timedelta(hours=-6), "(UTC-06:00) Central Daylight Time (US & Canada)"),
    14: (timedelta(hours=-6), "(UTC-06:00) Guadalajara, Mexico City, Monterrey"),
    15: (timedelta(hours=-6), "(UTC-06:00) Saskatchewan"),
    16: (timedelta(hours=-5), "(UTC-05:00) Bogota, Lima, Quito, Rio Branco"),
    17: (timedelta(hours=-5), "(UTC-05:00) Eastern Standard Time (US & Canada)"),
    18: (timedelta(hours=-5), "(UTC-05:00) Eastern Daylight Time (US & Canada)"),
    19: (timedelta(hours=-5), "(UTC-05:00) Indiana (East)"),
    20: (timedelta(hours=-4, minutes=-30), "(UTC-04:30) Caracas"),
    21: (timedelta(hours=-4), "(UTC-04:00) Asuncion"),
    22: (timedelta(hours=-4), "(UTC-04:00) Atlantic Standard Time (Canada)"),
    23: (timedelta(hours=-4), "(UTC-04:00) Atlantic Daylight Time (Canada)"),
    24: (timedelta(hours=-4), "(UTC-04:00) Cuiaba"),
    25: (timedelta(hours=-4), "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan"),
    26: (timedelta(hours=-4), "(UTC-04:00) Santiago"),
    27: (timedelta(hours=-3, minutes=-30), "(UTC-03:30) Newfoundland"),
    28: (timedelta(hours=-3), "(UTC-03:00) Brasilia"),
    29: (timedelta(hours=-3), "(UTC-03:00) Buenos Aires"),
    30: (timedelta(hours=-3), "(UTC-03:00) Cayenne, Fortaleza"),
    31: (timedelta(hours=-3), "(UTC-03:00) Greenland"),
    32: (timedelta(hours=-3), "(UTC-03:00) Montevideo"),
    33: (timedelta(hours=-3), "(UTC-03:00) Salvador"),
    34: (timedelta(hours=-2), "(UTC-02:00) Coordinated Universal Time-02"),
    35: (timedelta(hours=-1), "(UTC-01:00) Azores"),
    36: (timedelta(hours=-1), "(UTC-01:00) Cabo Verde Is."),
    37: (timedelta(0), "(UTC) Casablanca"),
    38: (timedelta(0), "(UTC) Coordinated Universal Time"),
    39: (timedelta(0), "(UTC) Dublin, Edinburgh, Lisbon, London"),
    40: (timedelta(0), "(UTC) Monrovia, Reykjavik"),
    41: (
        timedelta(hours=1),
        "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
    ),
    42: (
        timedelta(hours=1),
        "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
    ),
    43: (timedelta(hours=1), "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris"),
    44: (timedelta(hours=1), "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb"),
    45: (timedelta(hours=1), "(UTC+01:00) West Central Africa"),
    46: (timedelta(hours=1), "(UTC+01:00) Windhoek"),
    47: (timedelta(hours=2), "(UTC+02:00) Amman"),
    48: (timedelta(hours=2), "(UTC+02:00) Athens, Bucharest"),
    49: (timedelta(hours=2), "(UTC+02:00) Beirut"),
    50: (timedelta(hours=2), "(UTC+02:00) Cairo"),
    51: (timedelta(hours=2), "(UTC+02:00) Damascus"),
    52: (timedelta(hours=2), "(UTC+02:00) E. Europe"),
    53: (timedelta(hours=2), "(UTC+02:00) Harare, Pretoria"),
    54: (
        timedelta(hours=2),
        "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",
    ),
    55: (timedelta(hours=2), "(UTC+02:00) Istanbul"),
    56: (timedelta(hours=2), "(UTC+02:00) Jerusalem"),
    57: (timedelta(hours=2), "(UTC+02:00) Kaliningrad (RTZ 1)"),
    58: (timedelta(hours=2), "(UTC+02:00) Tripoli"),
    59: (timedelta(hours=3), "(UTC+03:00) Baghdad"),
    60: (timedelta(hours=3), "(UTC+03:00) Kuwait, Riyadh"),
    61: (timedelta(hours=3), "(UTC+03:00) Minsk"),
    62: (timedelta(hours=3), "(UTC+03:00) Moscow, St. Petersburg, Volgograd (RTZ 2)"),
    63: (timedelta(hours=3), "(UTC+03:00) Nairobi"),
    64: (timedelta(hours=3, minutes=30), "(UTC+03:30) Tehran"),
    65: (timedelta(hours=4), "(UTC+04:00) Abu Dhabi, Muscat"),
    66: (timedelta(hours=4), "(UTC+04:00) Baku"),
    67: (timedelta(hours=4), "(UTC+04:00) Izhevsk, Samara (RTZ 3)"),
    68: (timedelta(hours=4), "(UTC+04:00) Port Louis"),
    69: (timedelta(hours=4), "(UTC+04:00) Tbilisi"),
    70: (timedelta(hours=4), "(UTC+04:00) Yerevan"),
    71: (timedelta(hours=4, minutes=30), "(UTC+04:30) Kabul"),
    72: (timedelta(hours=5), "(UTC+05:00) Ashgabat, Tashkent"),
    73: (timedelta(hours=5), "(UTC+05:00) Ekaterinburg (RTZ 4)"),
    74: (timedelta(hours=5), "(UTC+05:00) Islamabad, Karachi"),
    75: (
        timedelta(hours=5, minutes=30),
        "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",
    ),
    76: (timedelta(hours=5, minutes=30), "(UTC+05:30) Sri Jayawardenepura"),
    77: (timedelta(hours=5, minutes=45), "(UTC+05:45) Kathmandu"),
    78: (timedelta(hours=6), "(UTC+06:00) Astana"),
    79: (timedelta(hours=6), "(UTC+06:00) Dhaka"),
    80: (timedelta(hours=6), "(UTC+06:00) Novosibirsk (RTZ 5)"),
    81: (timedelta(hours=6, minutes=30), "(UTC+06:30) Yangon (Rangoon)"),
    82: (timedelta(hours=7), "(UTC+07:00) Bangkok, Hanoi, Jakarta"),
    83: (timedelta(hours=7), "(UTC+07:00) Krasnoyarsk (RTZ 6)"),
    84: (timedelta(hours=8), "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi"),
    85: (timedelta(hours=8), "(UTC+08:00) Irkutsk (RTZ 7)"),
    86: (timedelta(hours=8), "(UTC+08:00) Kuala Lumpur, Singapore"),
    87: (timedelta(hours=8), "(UTC+08:00) Perth"),
    88: (timedelta(hours=8), "(UTC+08:00) Taipei"),
    89: (timedelta(hours=8), "(UTC+08:00) Ulaanbaatar"),
    90: (timedelta(hours=9), "(UTC+09:00) Osaka, Sapporo, Tokyo"),
    91: (timedelta(hours=9), "(UTC+09:00) Seoul"),
    92: (timedelta(hours=9), "(UTC+09:00) Yakutsk (RTZ 8)"),
    93: (timedelta(hours=9, minutes=30), "(UTC+09:30) Adelaide"),
    94: (timedelta(hours=9, minutes=30), "(UTC+09:30) Darwin"),
    95: (timedelta(hours=10), "(UTC+10:00) Brisbane"),
    96: (timedelta(hours=10), "(UTC+10:00) Canberra, Melbourne, Sydney"),
    97: (timedelta(hours=10), "(UTC+10:00) Guam, Port Moresby"),
    98: (timedelta(hours=10), "(UTC+10:00) Hobart"),
    99: (timedelta(hours=10), "(UTC+10:00) Magadan"),
    100: (timedelta(hours=10), "(UTC+10:00) Vladivostok, Magadan (RTZ 9)"),
    101: (timedelta(hours=11), "(UTC+11:00) Chokurdakh (RTZ 10)"),
    102: (timedelta(hours=11), "(UTC+11:00) Solomon Is., New Caledonia"),
    103: (timedelta(hours=12), "(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky (RTZ 11)"),
    104: (timedelta(hours=12), "(UTC+12:00) Auckland, Wellington"),
    105: (timedelta(hours=12), "(UTC+12:00) Coordinated Universal Time+12"),
    106: (timedelta(hours=12), "(UTC+12:00) Fiji"),
    107: (timedelta(hours=13), "(UTC+13:00) Nuku'alofa"),
    108: (timedelta(hours=13), "(UTC+13:00) Samoa"),
    109: (timedelta(hours=14), "(UTC+14:00) Kiritimati Island"),
}


def get_timezone(index: int) -> timezone:
    """Get the timezone from the index."""
    if lookup := TZINDEX.get(index):
        return timezone(lookup[0], lookup[1])
    return timezone.utc
